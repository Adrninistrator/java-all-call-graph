# 当前应用的调用关系写入数据库里的表名后缀，分隔符不能使用-，需要使用_
# app.name=test_app_name
app.name=

# 并发处理线程数量/数据源连接池数量（若超过了需要处理的任务数量，会使用任务数量作为线程数量）
thread.num=20

# 生成调用链时的详细程度
# 0: 最详细 完整类名+方法名+方法参数+返回类型
# 1: 详细 完整类名+方法名+方法参数
# 2: 中等 完整类名+方法名
# 3: 最简单 简单类名（对于同名类展示完整类名）+方法名
call.graph.output.detail=2

# 生成向下的调用链时，在一个调用方法中出现多次的被调用方法（包含方法调用业务功能数据），是否需要忽略，true/false
ignore.dup.callee.in.one.caller=false

# 生成文件的根目录，以"/"或"\\"作为分隔符，末尾是否为分隔符不影响（默认为当前目录）
output.root.path=

# 生成调用链文件的子目录名（默认为[app.name]_[当前时间]）
output.sub.dir.name=

# 批量写入数据库时每次插入的数量
db.insert.batch.size=1000

# 检查jar包文件是否有更新，false:不检查，true:检查，若生成调用链文件时发现jar包文件内容发生变化则不会生成
check.jar.file.updated=true

# 处理通过get/set方法关联的字段关联关系，false:不处理，true:处理
handle.get.set.field.relationship=false